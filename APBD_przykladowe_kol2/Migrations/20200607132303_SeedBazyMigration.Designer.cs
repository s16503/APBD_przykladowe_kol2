// <auto-generated />
using System;
using APBD_przykladowe_kol2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APBD_przykladowe_kol2.Migrations
{
    [DbContext(typeof(ZamowieniaDbContext))]
    [Migration("20200607132303_SeedBazyMigration")]
    partial class SeedBazyMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APBD_przykladowe_kol2.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdKlient");

                    b.ToTable("Klienci");

                    b.HasData(
                        new
                        {
                            IdKlient = 1,
                            Imie = "Jan",
                            Nazwisko = "Kowalski"
                        },
                        new
                        {
                            IdKlient = 2,
                            Imie = "Andrzej",
                            Nazwisko = "Nowak"
                        },
                        new
                        {
                            IdKlient = 3,
                            Imie = "Łucja",
                            Nazwisko = "Kawka"
                        });
                });

            modelBuilder.Entity("APBD_przykladowe_kol2.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdPracownik");

                    b.ToTable("Pracownicy");

                    b.HasData(
                        new
                        {
                            IdPracownik = 1,
                            Imie = "Alex",
                            Nazwisko = "Nixon"
                        },
                        new
                        {
                            IdPracownik = 2,
                            Imie = "Anna",
                            Nazwisko = "Jarawska"
                        },
                        new
                        {
                            IdPracownik = 3,
                            Imie = "Jan",
                            Nazwisko = "Kox"
                        });
                });

            modelBuilder.Entity("APBD_przykladowe_kol2.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CenaZaSzt")
                        .HasColumnType("real");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdWyrobuCukierniczego");

                    b.ToTable("WyrobyCukiernicze");

                    b.HasData(
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            CenaZaSzt = 15f,
                            Nazwa = "Makowiec",
                            Typ = "Ciasto"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 2,
                            CenaZaSzt = 20f,
                            Nazwa = "Szarlotka",
                            Typ = "Ciasto"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 3,
                            CenaZaSzt = 5f,
                            Nazwa = "Beza",
                            Typ = "Ciastko"
                        });
                });

            modelBuilder.Entity("APBD_przykladowe_kol2.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlienta")
                        .HasColumnType("int");

                    b.Property<int>("IdPracownika")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienia");

                    b.HasIndex("IdKlienta");

                    b.HasIndex("IdPracownika");

                    b.ToTable("Zamowienia");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            DataPrzyjecia = new DateTime(2020, 6, 7, 15, 23, 3, 187, DateTimeKind.Local).AddTicks(3293),
                            DataRealizacji = new DateTime(2020, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IdKlienta = 1,
                            IdPracownika = 1
                        },
                        new
                        {
                            IdZamowienia = 2,
                            DataPrzyjecia = new DateTime(2020, 6, 7, 15, 23, 3, 194, DateTimeKind.Local).AddTicks(3450),
                            DataRealizacji = new DateTime(2020, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IdKlienta = 2,
                            IdPracownika = 2,
                            Uwagi = "świeże ma być"
                        },
                        new
                        {
                            IdZamowienia = 3,
                            DataPrzyjecia = new DateTime(2020, 6, 7, 15, 23, 3, 194, DateTimeKind.Local).AddTicks(4106),
                            DataRealizacji = new DateTime(2020, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IdKlienta = 3,
                            IdPracownika = 2
                        });
                });

            modelBuilder.Entity("APBD_przykladowe_kol2.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .HasColumnType("int");

                    b.Property<int>("IdWyrobuCukierniczego")
                        .HasColumnType("int");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienia", "IdWyrobuCukierniczego");

                    b.HasIndex("IdWyrobuCukierniczego");

                    b.ToTable("Zamowienia_WyrobyCukiernicze");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 3,
                            IdWyrobuCukierniczego = 1,
                            Ilosc = 2
                        },
                        new
                        {
                            IdZamowienia = 2,
                            IdWyrobuCukierniczego = 2,
                            Ilosc = 4
                        },
                        new
                        {
                            IdZamowienia = 1,
                            IdWyrobuCukierniczego = 3,
                            Ilosc = 1
                        });
                });

            modelBuilder.Entity("APBD_przykladowe_kol2.Models.Zamowienie", b =>
                {
                    b.HasOne("APBD_przykladowe_kol2.Models.Klient", "Klient")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdKlienta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD_przykladowe_kol2.Models.Pracownik", "Pracownik")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdPracownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APBD_przykladowe_kol2.Models.Zamowienie_WyrobCukierniczy", b =>
                {
                    b.HasOne("APBD_przykladowe_kol2.Models.WyrobCukierniczy", "WyrobCukierniczy")
                        .WithMany("Zamowienia_WyrobyCukiernicze")
                        .HasForeignKey("IdWyrobuCukierniczego")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBD_przykladowe_kol2.Models.Zamowienie", "Zamowienie")
                        .WithMany("Zamowienia_WyrobyCukiernicze")
                        .HasForeignKey("IdZamowienia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
